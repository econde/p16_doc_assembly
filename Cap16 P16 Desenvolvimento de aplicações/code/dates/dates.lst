PDS16 assembler v0.0(Jan 29 2019)	dates.lst	Mon Feb  4 17:33:06 2019


Sections
Index   Name            Addresses       Size
0       .startup        0000 - 0013     0014 20
1       .stack          0014 - 0413     0400 1024
2       .text           0414 - 04c7     00b4 180
3       .data           04c8 - 04c9     0002 2

Symbols
Name                    Type      Value      Section
addr_days               LABEL     04c6 1222  .text
days                    LABEL     04c8 1224  .data
_start                  LABEL     0004 4     .startup
stack_top               LABEL     0414 1044  .stack
main                    LABEL     049e 1182  .text
line#10                 LABEL     000e 14    .startup
days_since_for          LABEL     0478 1144  .text
addr_main               LABEL     0012 18    .startup
addr_stack_top          LABEL     0010 16    .startup
line#3                  LABEL     0002 2     .startup
is_leap                 LABEL     0414 1044  .text
month_days              LABEL     0422 1058  .text
year_days               LABEL     043c 1084  .text
STACK_SIZE              ABSOLUTE  0400 1024  .startup
addr_month_days         LABEL     0458 1112  .text
days_since              LABEL     045a 1114  .text
year_days_if_end        LABEL     0450 1104  .text
days_since_for_cond     LABEL     0482 1154  .text

Code listing
   1              	.section .startup
   2 0000 0158    		b	_start	
   3 0002 ff5b    		b	.
   4              	_start:
   5 0004 5d0c    		ldr	sp, addr_stack_top
   6 0006 500c    		ldr	r0, addr_main
   7 0008 81b7    		mov	r1, pc
   8 000a 1ea2    		add	lr, r1, 4
   9 000c 0fb0    		mov	pc, r0
  10 000e ff5b    		b	.
  11              	addr_stack_top:
  12 0010 1404    		.word	stack_top
  13              	addr_main:
  14 0012 9e04    		.word	main
  15              	
  16              		.section .stack
  17              		.equ	STACK_SIZE, 1024
  18 0014 00000000		.space	STACK_SIZE
  18 0018 00000000
  18 001c 00000000
  18 0020 00000000
  19              	stack_top:
  20              	/*--------------------------------------------------------------------
  21              	int8_t is_leap(<r0> uint16_t year) {
  22              		return year % 4 == 0;
  23              	}
  24              	*/
  25              		.text
  26              	is_leap:
  27 0414 3160    		mov	r1, #3
  28 0416 80c0    		and	r0, r0, r1
  29 0418 60b0    		mrs	r0, cpsr
  30 041a 80e8    		lsr	r0, r0, 1
  31 041c 0060    		mov	r0, 0
  32 041e 0090    		adc	r0, r0, r0
  33 0420 0fb7    		mov	pc, lr
  34              	
  35              	/*--------------------------------------------------------------------
  36              	int16_t month_days[] =
  37              	    {0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365};
  38              	
  39              	int16_t year_days(<r0> uint16_t year,
  40              			  <r1> uint8_t month, <r2> uint8_t day) {
  41              		return month_days[month - 1]
  42              			+ (month > 2 && is_leap(year) ? 1 : 0) + day - 1;
  43              	}
  44              	*/
  45              		.text
  46              	month_days:
  47 0422 00001f00		.word	0, 31, 59, 90, 120, 151, 181, 212, 243, 273, 304, 334, 365
  47 0426 3b005a00
  47 042a 78009700
  47 042e b500d400
  47 0432 f3001101
  47 0436 30014e01
  47 043a 6d01
  48              	year_days:
  49 043c 0e24    		push	lr
  50 043e 0424    		push	r4
  51 0440 b30c    		ldr	r3, addr_month_days
  52 0442 94a8    		sub	r4, r1, 1	; month - 1
  53 0444 4482    		add	r4, r4, r4	; scale index of array by two
  54 0446 3312    		ldr	r3, [r3, r4] 	; month_days[month - 1]
  55 0448 91a9    		sub	r1, r1, 3	; month - 3
  56 044a 0248    		blo	year_days_if_end
  57 044c e35f    		bl	is_leap
  58 044e 3380    		add	r3, r3, r0	; + is_leap(year)
  59              	year_days_if_end:
  60 0450 3381    		add	r3, r3, r2	; + day
  61 0452 b0a8    		sub	r0, r3, 1	; - 1;
  62 0454 0404    		pop	r4
  63 0456 0f04    		pop	pc
  64              	
  65              	addr_month_days:
  66 0458 2204    		.word	month_days
  67              	/*--------------------------------------------------------------------
  68              	uint16_t days_since(<r5> <r0> uint16_t year_base, <r6> <r1> uint16_t year,
  69              				 <r7> <r2> uint8_t month, <r8> <r3> uint8_t day {
  70              		<r4> uint16_t days  = 0;
  71              		for ( <r5> uint16_t y = year_base; y < year; ++y)
  72              			days += 365 + is_leap(y);
  73              		return days + year_days(year, month, day);
  74              	}
  75              	*/	
  76              		.text
  77              	days_since:
  78 045a 0e24    		push	lr
  79 045c 0424    		push	r4
  80 045e 0524    		push	r5
  81 0460 0624    		push	r6
  82 0462 0724    		push	r7
  83 0464 0824    		push	r8
  84 0466 0924    		push	r9
  85 0468 05b0    		mov	r5, r0
  86 046a 86b0    		mov	r6, r1
  87 046c 07b1    		mov	r7, r2
  88 046e 88b1    		mov	r8, r3
  89 0470 0460    		mov	r4, 0
  90 0472 d960    		mov	r9, 365 & 0xf
  91 0474 1970    		movt	r9, 365 >> 8
  92 0476 0558    		b	days_since_for_cond
  93              	days_since_for:
  94 0478 c484    		add	r4, r4, r9
  95 047a 80b2    		mov	r0, r5
  96 047c cb5f    		bl	is_leap
  97 047e 4480    		add	r4, r4, r0
  98 0480 d5a0    		add	r5, r5, 1
  99              	days_since_for_cond:
 100 0482 50bb    		cmp	r5, r6
 101 0484 f94b    		blo	days_since_for
 102 0486 00b3    		mov	r0, r6
 103 0488 81b3    		mov	r1, r7
 104 048a 02b4    		mov	r2, r8
 105 048c d75f    		bl	year_days
 106 048e 4080    		add	r0, r4, r0
 107 0490 0904    		pop	r9
 108 0492 0804    		pop	r8
 109 0494 0704    		pop	r7
 110 0496 0604    		pop	r6
 111 0498 0504    		pop	r5
 112 049a 0304    		pop	r3
 113 049c 0f04    		pop	pc
 114              	/*--------------------------------------------------------------------
 115              	uint16_t days;
 116              	int main() {
 117              		days = days_since(1900, 2017, 3, 30)
 118              			- days_since(1900, 1995, 3, 8);
 119              	}
 120              	*/
 121              		.data
 122              	days:
 123 04c8 0000    		.word	0
 124              	
 125              		.text
 126              	main:
 127 049e 0e24    		push	lr
 128 04a0 c066    		mov	r0, 1900 & 0xff
 129 04a2 7070    		movt	r0, 1900 >> 8
 130 04a4 116e    		mov	r1, 2017 & 0xff
 131 04a6 7170    		movt	r1, 2017 >> 8
 132 04a8 3260    		mov	r2, 3
 133 04aa e361    		mov	r3, 30
 134 04ac d65f    		bl	days_since
 135 04ae 04b0    		mov	r4, r0
 136 04b0 c066    		mov	r0, 1900 & 0xff
 137 04b2 7070    		movt	r0, 1900 >> 8
 138 04b4 b06c    		mov	r0, 1995 & 0xff
 139 04b6 7070    		movt	r0, 1995 >> 8
 140 04b8 3260    		mov	r2, 3
 141 04ba 8360    		mov	r3, 8
 142 04bc ce5f    		bl	days_since
 143 04be 4088    		sub	r0, r4, r0
 144 04c0 210c    		ldr	r1, addr_days
 145 04c2 1020    		str	r0, [r1]
 146 04c4 0f04    		pop	pc
 147              	addr_days:
 148 04c6 c804    		.word 	days
